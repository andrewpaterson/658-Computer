package name.bizna.emu65816;

import name.bizna.emu65816.opcode.*;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static name.bizna.emu65816.AddressingMode.*;

public class OpCodeTable
{
  public static final byte BRK_Interrupt = (byte) 0x00;
  public static final byte ORA_DirectPageIndexedIndirectWithX = (byte) 0x01;
  public static final byte COP_Interrupt = (byte) 0x02;
  public static final byte ORA_StackRelative = (byte) 0x03;
  public static final byte TSB_DirectPage = (byte) 0x04;
  public static final byte ORA_DirectPage = (byte) 0x05;
  public static final byte ASL_DirectPage = (byte) 0x06;
  public static final byte ORA_DirectPageIndirectLong = (byte) 0x07;
  public static final byte PHP_StackImplied = (byte) 0x08;
  public static final byte ORA_Immediate = (byte) 0x09;
  public static final byte ASL_Accumulator = (byte) 0x0A;
  public static final byte PHD_StackImplied = (byte) 0x0B;
  public static final byte TSB_Absolute = (byte) 0x0C;
  public static final byte ORA_Absolute = (byte) 0x0D;
  public static final byte ASL_Absolute = (byte) 0x0E;
  public static final byte ORA_AbsoluteLong = (byte) 0x0F;
  public static final byte BPL_ProgramCounterRelative = (byte) 0x10;
  public static final byte ORA_DirectPageIndirectIndexedWithY = (byte) 0x11;
  public static final byte ORA_DirectPageIndirect = (byte) 0x12;
  public static final byte ORA_StackRelativeIndirectIndexedWithY = (byte) 0x13;
  public static final byte TRB_DirectPage = (byte) 0x14;
  public static final byte ORA_DirectPageIndexedWithX = (byte) 0x15;
  public static final byte ASL_DirectPageIndexedWithX = (byte) 0x16;
  public static final byte ORA_DirectPageIndirectLongIndexedWithY = (byte) 0x17;
  public static final byte CLC_Implied = (byte) 0x18;
  public static final byte ORA_AbsoluteIndexedWithY = (byte) 0x19;
  public static final byte INC_Accumulator = (byte) 0x1A;
  public static final byte TCS_Implied = (byte) 0x1B;
  public static final byte TRB_Absolute = (byte) 0x1C;
  public static final byte ORA_AbsoluteIndexedWithX = (byte) 0x1D;
  public static final byte ASL_AbsoluteIndexedWithX = (byte) 0x1E;
  public static final byte ORA_AbsoluteLongIndexedWithX = (byte) 0x1F;
  public static final byte JSR_Absolute = (byte) 0x20;
  public static final byte AND_DirectPageIndexedIndirectWithX = (byte) 0x21;
  public static final byte JSR_AbsoluteLong = (byte) 0x22;
  public static final byte AND_StackRelative = (byte) 0x23;
  public static final byte BIT_DirectPage = (byte) 0x24;
  public static final byte AND_DirectPage = (byte) 0x25;
  public static final byte ROL_DirectPage = (byte) 0x26;
  public static final byte AND_DirectPageIndirectLong = (byte) 0x27;
  public static final byte PLP_StackImplied = (byte) 0x28;
  public static final byte AND_Immediate = (byte) 0x29;
  public static final byte ROL_Accumulator = (byte) 0x2A;
  public static final byte PLD_StackImplied = (byte) 0x2B;
  public static final byte BIT_Absolute = (byte) 0x2C;
  public static final byte AND_Absolute = (byte) 0x2D;
  public static final byte ROL_Absolute = (byte) 0x2E;
  public static final byte AND_AbsoluteLong = (byte) 0x2F;
  public static final byte BMI_ProgramCounterRelative = (byte) 0x30;
  public static final byte AND_DirectPageIndirectIndexedWithY = (byte) 0x31;
  public static final byte AND_DirectPageIndirect = (byte) 0x32;
  public static final byte AND_StackRelativeIndirectIndexedWithY = (byte) 0x33;
  public static final byte BIT_DirectPageIndexedWithX = (byte) 0x34;
  public static final byte AND_DirectPageIndexedWithX = (byte) 0x35;
  public static final byte ROL_DirectPageIndexedWithX = (byte) 0x36;
  public static final byte AND_DirectPageIndirectLongIndexedWithY = (byte) 0x37;
  public static final byte SEC_Implied = (byte) 0x38;
  public static final byte AND_AbsoluteIndexedWithY = (byte) 0x39;
  public static final byte DEC_Accumulator = (byte) 0x3A;
  public static final byte TSC_Implied = (byte) 0x3B;
  public static final byte BIT_AbsoluteIndexedWithX = (byte) 0x3C;
  public static final byte AND_AbsoluteIndexedWithX = (byte) 0x3D;
  public static final byte ROL_AbsoluteIndexedWithX = (byte) 0x3E;
  public static final byte AND_AbsoluteLongIndexedWithX = (byte) 0x3F;
  public static final byte RTI_StackImplied = (byte) 0x40;
  public static final byte EOR_DirectPageIndexedIndirectWithX = (byte) 0x41;
  public static final byte WDM_Implied = (byte) 0x42;
  public static final byte EOR_StackRelative = (byte) 0x43;
  public static final byte MVP_BlockMove = (byte) 0x44;
  public static final byte EOR_DirectPage = (byte) 0x45;
  public static final byte LSR_DirectPage = (byte) 0x46;
  public static final byte EOR_DirectPageIndirectLong = (byte) 0x47;
  public static final byte PHA_StackImplied = (byte) 0x48;
  public static final byte EOR_Immediate = (byte) 0x49;
  public static final byte LSR_Accumulator = (byte) 0x4A;
  public static final byte PHK_StackImplied = (byte) 0x4B;
  public static final byte JMP_Absolute = (byte) 0x4C;
  public static final byte EOR_Absolute = (byte) 0x4D;
  public static final byte LSR_Absolute = (byte) 0x4E;
  public static final byte EOR_AbsoluteLong = (byte) 0x4F;
  public static final byte BVC_ProgramCounterRelative = (byte) 0x50;
  public static final byte EOR_DirectPageIndirectIndexedWithY = (byte) 0x51;
  public static final byte EOR_DirectPageIndirect = (byte) 0x52;
  public static final byte EOR_StackRelativeIndirectIndexedWithY = (byte) 0x53;
  public static final byte MVN_BlockMove = (byte) 0x54;
  public static final byte EOR_DirectPageIndexedWithX = (byte) 0x55;
  public static final byte LSR_DirectPageIndexedWithX = (byte) 0x56;
  public static final byte EOR_DirectPageIndirectLongIndexedWithY = (byte) 0x57;
  public static final byte CLI_Implied = (byte) 0x58;
  public static final byte EOR_AbsoluteIndexedWithY = (byte) 0x59;
  public static final byte PHY_StackImplied = (byte) 0x5A;
  public static final byte TCD_Implied = (byte) 0x5B;
  public static final byte JMP_AbsoluteLong = (byte) 0x5C;
  public static final byte EOR_AbsoluteIndexedWithX = (byte) 0x5D;
  public static final byte LSR_AbsoluteIndexedWithX = (byte) 0x5E;
  public static final byte EOR_AbsoluteLongIndexedWithX = (byte) 0x5F;
  public static final byte RTS_StackImplied = (byte) 0x60;
  public static final byte ADC_DirectPageIndexedIndirectWithX = (byte) 0x61;
  public static final byte PER_StackProgramCounterRelativeLong = (byte) 0x62;
  public static final byte ADC_StackRelative = (byte) 0x63;
  public static final byte STZ_DirectPage = (byte) 0x64;
  public static final byte ADC_DirectPage = (byte) 0x65;
  public static final byte ROR_DirectPage = (byte) 0x66;
  public static final byte ADC_DirectPageIndirectLong = (byte) 0x67;
  public static final byte PLA_StackImplied = (byte) 0x68;
  public static final byte ADC_Immediate = (byte) 0x69;
  public static final byte ROR_Accumulator = (byte) 0x6A;
  public static final byte RTL_StackImplied = (byte) 0x6B;
  public static final byte JMP_AbsoluteIndirect = (byte) 0x6C;
  public static final byte ADC_Absolute = (byte) 0x6D;
  public static final byte ROR_Absolute = (byte) 0x6E;
  public static final byte ADC_AbsoluteLong = (byte) 0x6F;
  public static final byte BVS_ProgramCounterRelative = (byte) 0x70;
  public static final byte ADC_DirectPageIndirectIndexedWithY = (byte) 0x71;
  public static final byte ADC_DirectPageIndirect = (byte) 0x72;
  public static final byte ADC_StackRelativeIndirectIndexedWithY = (byte) 0x73;
  public static final byte STZ_DirectPageIndexedWithX = (byte) 0x74;
  public static final byte ADC_DirectPageIndexedWithX = (byte) 0x75;
  public static final byte ROR_DirectPageIndexedWithX = (byte) 0x76;
  public static final byte ADC_DirectPageIndirectLongIndexedWithY = (byte) 0x77;
  public static final byte SEI_Implied = (byte) 0x78;
  public static final byte ADC_AbsoluteIndexedWithY = (byte) 0x79;
  public static final byte PLY_StackImplied = (byte) 0x7A;
  public static final byte TDC_Implied = (byte) 0x7B;
  public static final byte JMP_AbsoluteIndexedIndirectWithX = (byte) 0x7C;
  public static final byte ADC_AbsoluteIndexedWithX = (byte) 0x7D;
  public static final byte ROR_AbsoluteIndexedWithX = (byte) 0x7E;
  public static final byte ADC_AbsoluteLongIndexedWithX = (byte) 0x7F;
  public static final byte BRA_ProgramCounterRelative = (byte) 0x80;
  public static final byte STA_DirectPageIndexedIndirectWithX = (byte) 0x81;
  public static final byte BRL_ProgramCounterRelativeLong = (byte) 0x82;
  public static final byte STA_StackRelative = (byte) 0x83;
  public static final byte STY_DirectPage = (byte) 0x84;
  public static final byte STA_DirectPage = (byte) 0x85;
  public static final byte STX_DirectPage = (byte) 0x86;
  public static final byte STA_DirectPageIndirectLong = (byte) 0x87;
  public static final byte DEY_Implied = (byte) 0x88;
  public static final byte BIT_Immediate = (byte) 0x89;
  public static final byte TXA_Implied = (byte) 0x8A;
  public static final byte PHB_StackImplied = (byte) 0x8B;
  public static final byte STY_Absolute = (byte) 0x8C;
  public static final byte STA_Absolute = (byte) 0x8D;
  public static final byte STX_Absolute = (byte) 0x8E;
  public static final byte STA_AbsoluteLong = (byte) 0x8F;
  public static final byte BCC_ProgramCounterRelative = (byte) 0x90;
  public static final byte STA_DirectPageIndirectIndexedWithY = (byte) 0x91;
  public static final byte STA_DirectPageIndirect = (byte) 0x92;
  public static final byte STA_StackRelativeIndirectIndexedWithY = (byte) 0x93;
  public static final byte STY_DirectPageIndexedWithX = (byte) 0x94;
  public static final byte STA_DirectPageIndexedWithX = (byte) 0x95;
  public static final byte STX_DirectPageIndexedWithY = (byte) 0x96;
  public static final byte STA_DirectPageIndirectLongIndexedWithY = (byte) 0x97;
  public static final byte TYA_Implied = (byte) 0x98;
  public static final byte STA_AbsoluteIndexedWithY = (byte) 0x99;
  public static final byte TXS_Implied = (byte) 0x9A;
  public static final byte TXY_Implied = (byte) 0x9B;
  public static final byte STZ_Absolute = (byte) 0x9C;
  public static final byte STA_AbsoluteIndexedWithX = (byte) 0x9D;
  public static final byte STZ_AbsoluteIndexedWithX = (byte) 0x9E;
  public static final byte STA_AbsoluteLongIndexedWithX = (byte) 0x9F;
  public static final byte LDY_Immediate = (byte) 0xA0;
  public static final byte LDA_DirectPageIndexedIndirectWithX = (byte) 0xA1;
  public static final byte LDX_Immediate = (byte) 0xA2;
  public static final byte LDA_StackRelative = (byte) 0xA3;
  public static final byte LDY_DirectPage = (byte) 0xA4;
  public static final byte LDA_DirectPage = (byte) 0xA5;
  public static final byte LDX_DirectPage = (byte) 0xA6;
  public static final byte LDA_DirectPageIndirectLong = (byte) 0xA7;
  public static final byte TAY_Implied = (byte) 0xA8;
  public static final byte LDA_Immediate = (byte) 0xA9;
  public static final byte TAX_Implied = (byte) 0xAA;
  public static final byte PLB_StackImplied = (byte) 0xAB;
  public static final byte LDY_Absolute = (byte) 0xAC;
  public static final byte LDA_Absolute = (byte) 0xAD;
  public static final byte LDX_Absolute = (byte) 0xAE;
  public static final byte LDA_AbsoluteLong = (byte) 0xAF;
  public static final byte BCS_ProgramCounterRelative = (byte) 0xB0;
  public static final byte LDA_DirectPageIndirectIndexedWithY = (byte) 0xB1;
  public static final byte LDA_DirectPageIndirect = (byte) 0xB2;
  public static final byte LDA_StackRelativeIndirectIndexedWithY = (byte) 0xB3;
  public static final byte LDY_DirectPageIndexedWithX = (byte) 0xB4;
  public static final byte LDA_DirectPageIndexedWithX = (byte) 0xB5;
  public static final byte LDX_DirectPageIndexedWithY = (byte) 0xB6;
  public static final byte LDA_DirectPageIndirectLongIndexedWithY = (byte) 0xB7;
  public static final byte CLV_Implied = (byte) 0xB8;
  public static final byte LDA_AbsoluteIndexedWithY = (byte) 0xB9;
  public static final byte TSX_Implied = (byte) 0xBA;
  public static final byte TYX_Implied = (byte) 0xBB;
  public static final byte LDY_AbsoluteIndexedWithX = (byte) 0xBC;
  public static final byte LDA_AbsoluteIndexedWithX = (byte) 0xBD;
  public static final byte LDX_AbsoluteIndexedWithY = (byte) 0xBE;
  public static final byte LDA_AbsoluteLongIndexedWithX = (byte) 0xBF;
  public static final byte CPY_Immediate = (byte) 0xC0;
  public static final byte CMP_DirectPageIndexedIndirectWithX = (byte) 0xC1;
  public static final byte REP_Immediate = (byte) 0xC2;
  public static final byte CMP_StackRelative = (byte) 0xC3;
  public static final byte CPY_DirectPage = (byte) 0xC4;
  public static final byte CMP_DirectPage = (byte) 0xC5;
  public static final byte DEC_DirectPage = (byte) 0xC6;
  public static final byte CMP_DirectPageIndirectLong = (byte) 0xC7;
  public static final byte INY_Implied = (byte) 0xC8;
  public static final byte CMP_Immediate = (byte) 0xC9;
  public static final byte DEX_Implied = (byte) 0xCA;
  public static final byte WAI_Implied = (byte) 0xCB;
  public static final byte CPY_Absolute = (byte) 0xCC;
  public static final byte CMP_Absolute = (byte) 0xCD;
  public static final byte DEC_Absolute = (byte) 0xCE;
  public static final byte CMP_AbsoluteLong = (byte) 0xCF;
  public static final byte BNE_ProgramCounterRelative = (byte) 0xD0;
  public static final byte CMP_DirectPageIndirectIndexedWithY = (byte) 0xD1;
  public static final byte CMP_DirectPageIndirect = (byte) 0xD2;
  public static final byte CMP_StackRelativeIndirectIndexedWithY = (byte) 0xD3;
  public static final byte PEI_StackDirectPageIndirect = (byte) 0xD4;
  public static final byte CMP_DirectPageIndexedWithX = (byte) 0xD5;
  public static final byte DEC_DirectPageIndexedWithX = (byte) 0xD6;
  public static final byte CMP_DirectPageIndirectLongIndexedWithY = (byte) 0xD7;
  public static final byte CLD_Implied = (byte) 0xD8;
  public static final byte CMP_AbsoluteIndexedWithY = (byte) 0xD9;
  public static final byte PHX_StackImplied = (byte) 0xDA;
  public static final byte STP_Implied = (byte) 0xDB;
  public static final byte JMP_AbsoluteIndirectLong = (byte) 0xDC;
  public static final byte CMP_AbsoluteIndexedWithX = (byte) 0xDD;
  public static final byte DEC_AbsoluteIndexedWithX = (byte) 0xDE;
  public static final byte CMP_AbsoluteLongIndexedWithX = (byte) 0xDF;
  public static final byte CPX_Immediate = (byte) 0xE0;
  public static final byte SBC_DirectPageIndexedIndirectWithX = (byte) 0xE1;
  public static final byte SEP_Immediate = (byte) 0xE2;
  public static final byte SBC_StackRelative = (byte) 0xE3;
  public static final byte CPX_DirectPage = (byte) 0xE4;
  public static final byte SBC_DirectPage = (byte) 0xE5;
  public static final byte INC_DirectPage = (byte) 0xE6;
  public static final byte SBC_DirectPageIndirectLong = (byte) 0xE7;
  public static final byte INX_Implied = (byte) 0xE8;
  public static final byte SBC_Immediate = (byte) 0xE9;
  public static final byte NOP_Implied = (byte) 0xEA;
  public static final byte XBA_Implied = (byte) 0xEB;
  public static final byte CPX_Absolute = (byte) 0xEC;
  public static final byte SBC_Absolute = (byte) 0xED;
  public static final byte INC_Absolute = (byte) 0xEE;
  public static final byte SBC_AbsoluteLong = (byte) 0xEF;
  public static final byte BEQ_ProgramCounterRelative = (byte) 0xF0;
  public static final byte SBC_DirectPageIndirectIndexedWithY = (byte) 0xF1;
  public static final byte SBC_DirectPageIndirect = (byte) 0xF2;
  public static final byte SBC_StackRelativeIndirectIndexedWithY = (byte) 0xF3;
  public static final byte PEA_StackAbsolute = (byte) 0xF4;
  public static final byte SBC_DirectPageIndexedWithX = (byte) 0xF5;
  public static final byte INC_DirectPageIndexedWithX = (byte) 0xF6;
  public static final byte SBC_DirectPageIndirectLongIndexedWithY = (byte) 0xF7;
  public static final byte SED_Implied = (byte) 0xF8;
  public static final byte SBC_AbsoluteIndexedWithY = (byte) 0xF9;
  public static final byte PLX_StackImplied = (byte) 0xFA;
  public static final byte XCE_Implied = (byte) 0xFB;
  public static final byte JSR_AbsoluteIndexedIndirectWithX = (byte) 0xFC;
  public static final byte SBC_AbsoluteIndexedWithX = (byte) 0xFD;
  public static final byte INC_AbsoluteIndexedWithX = (byte) 0xFE;
  public static final byte SBC_AbsoluteLongIndexedWithX = (byte) 0xFF;

  public static OpCode[] createTable()
  {
    List<OpCode> opCodes = new ArrayList<>();
    add(opCodes, new OpCode_BRK("BRK", BRK_Interrupt, Interrupt));
    add(opCodes, new OpCode_ORA("ORA", ORA_DirectPageIndexedIndirectWithX, DirectPageIndexedIndirectWithX));
    add(opCodes, new OpCode_COP("COP", COP_Interrupt, Interrupt));
    add(opCodes, new OpCode_ORA("ORA", ORA_StackRelative, StackRelative));
    add(opCodes, new OpCode_TSB("TSB", TSB_DirectPage, DirectPage));
    add(opCodes, new OpCode_ORA("ORA", ORA_DirectPage, DirectPage));
    add(opCodes, new OpCode_ASL("ASL", ASL_DirectPage, DirectPage));
    add(opCodes, new OpCode_ORA("ORA", ORA_DirectPageIndirectLong, DirectPageIndirectLong));
    add(opCodes, new OpCode_PHP("PHP", PHP_StackImplied, StackImplied));
    add(opCodes, new OpCode_ORA("ORA", ORA_Immediate, Immediate));
    add(opCodes, new OpCode_ASL("ASL", ASL_Accumulator, Accumulator));
    add(opCodes, new OpCode_PHD("PHD", PHD_StackImplied, StackImplied));
    add(opCodes, new OpCode_TSB("TSB", TSB_Absolute, Absolute));
    add(opCodes, new OpCode_ORA("ORA", ORA_Absolute, Absolute));
    add(opCodes, new OpCode_ASL("ASL", ASL_Absolute, Absolute));
    add(opCodes, new OpCode_ORA("ORA", ORA_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BPL("BPL", BPL_ProgramCounterRelative, ProgramCounterRelative));
    add(opCodes, new OpCode_ORA("ORA", ORA_DirectPageIndirectIndexedWithY, DirectPageIndirectIndexedWithY));
    add(opCodes, new OpCode_ORA("ORA", ORA_DirectPageIndirect, DirectPageIndirect));
    add(opCodes, new OpCode_ORA("ORA", ORA_StackRelativeIndirectIndexedWithY, StackRelativeIndirectIndexedWithY));
    add(opCodes, new OpCode_TRB("TRB", TRB_DirectPage, DirectPage));
    add(opCodes, new OpCode_ORA("ORA", ORA_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_ASL("ASL", ASL_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_ORA("ORA", ORA_DirectPageIndirectLongIndexedWithY, DirectPageIndirectLongIndexedWithY));
    add(opCodes, new OpCode_CLC("CLC", CLC_Implied, Implied));
    add(opCodes, new OpCode_ORA("ORA", ORA_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_INC("INC", INC_Accumulator, Accumulator));
    add(opCodes, new OpCode_TCS("TCS", TCS_Implied, Implied));
    add(opCodes, new OpCode_TRB("TRB", TRB_Absolute, Absolute));
    add(opCodes, new OpCode_ORA("ORA", ORA_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_ASL("ASL", ASL_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_ORA("ORA", ORA_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_JSR("JSR", JSR_Absolute, Absolute));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndexedIndirectWithX, DirectPageIndexedIndirectWithX));
    add(opCodes, new OpCode_JSR("JSR", JSR_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_AND("AND", AND_StackRelative, StackRelative));
    add(opCodes, new OpCode_BIT("BIT", BIT_DirectPage, DirectPage));
    add(opCodes, new OpCode_AND("AND", AND_DirectPage, DirectPage));
    add(opCodes, new OpCode_ROL("ROL", ROL_DirectPage, DirectPage));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndirectLong, DirectPageIndirectLong));
    add(opCodes, new OpCode_PLP("PLP", PLP_StackImplied, StackImplied));
    add(opCodes, new OpCode_AND("AND", AND_Immediate, Immediate));
    add(opCodes, new OpCode_ROL("ROL", ROL_Accumulator, Accumulator));
    add(opCodes, new OpCode_PLD("PLD", PLD_StackImplied, StackImplied));
    add(opCodes, new OpCode_BIT("BIT", BIT_Absolute, Absolute));
    add(opCodes, new OpCode_AND("AND", AND_Absolute, Absolute));
    add(opCodes, new OpCode_ROL("ROL", ROL_Absolute, Absolute));
    add(opCodes, new OpCode_AND("AND", AND_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BMI("BMI", BMI_ProgramCounterRelative, ProgramCounterRelative));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndirectIndexedWithY, DirectPageIndirectIndexedWithY));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndirect, DirectPageIndirect));
    add(opCodes, new OpCode_AND("AND", AND_StackRelativeIndirectIndexedWithY, StackRelativeIndirectIndexedWithY));
    add(opCodes, new OpCode_BIT("BIT", BIT_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_ROL("ROL", ROL_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndirectLongIndexedWithY, DirectPageIndirectLongIndexedWithY));
    add(opCodes, new OpCode_SEC("SEC", SEC_Implied, Implied));
    add(opCodes, new OpCode_AND("AND", AND_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_DEC("DEC", DEC_Accumulator, Accumulator));
    add(opCodes, new OpCode_TSC("TSC", TSC_Implied, Implied));
    add(opCodes, new OpCode_BIT("BIT", BIT_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_AND("AND", AND_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_ROL("ROL", ROL_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_AND("AND", AND_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_RTI("RTI", RTI_StackImplied, StackImplied));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndexedIndirectWithX, DirectPageIndexedIndirectWithX));
    add(opCodes, new OpCode_WDM("WDM", WDM_Implied, Implied));
    add(opCodes, new OpCode_EOR("EOR", EOR_StackRelative, StackRelative));
    add(opCodes, new OpCode_MVP("MVP", MVP_BlockMove, BlockMove));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPage, DirectPage));
    add(opCodes, new OpCode_LSR("LSR", LSR_DirectPage, DirectPage));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndirectLong, DirectPageIndirectLong));
    add(opCodes, new OpCode_PHA("PHA", PHA_StackImplied, StackImplied));
    add(opCodes, new OpCode_EOR("EOR", EOR_Immediate, Immediate));
    add(opCodes, new OpCode_LSR("LSR", LSR_Accumulator, Accumulator));
    add(opCodes, new OpCode_PHK("PHK", PHK_StackImplied, StackImplied));
    add(opCodes, new OpCode_JMP("JMP", JMP_Absolute, Absolute));
    add(opCodes, new OpCode_EOR("EOR", EOR_Absolute, Absolute));
    add(opCodes, new OpCode_LSR("LSR", LSR_Absolute, Absolute));
    add(opCodes, new OpCode_EOR("EOR", EOR_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BVC("BVC", BVC_ProgramCounterRelative, ProgramCounterRelative));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndirectIndexedWithY, DirectPageIndirectIndexedWithY));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndirect, DirectPageIndirect));
    add(opCodes, new OpCode_EOR("EOR", EOR_StackRelativeIndirectIndexedWithY, StackRelativeIndirectIndexedWithY));
    add(opCodes, new OpCode_MVN("MVN", MVN_BlockMove, BlockMove));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_LSR("LSR", LSR_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndirectLongIndexedWithY, DirectPageIndirectLongIndexedWithY));
    add(opCodes, new OpCode_CLI("CLI", CLI_Implied, Implied));
    add(opCodes, new OpCode_EOR("EOR", EOR_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_PHY("PHY", PHY_StackImplied, StackImplied));
    add(opCodes, new OpCode_TCD("TCD", TCD_Implied, Implied));
    add(opCodes, new OpCode_JMP("JMP", JMP_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_EOR("EOR", EOR_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_LSR("LSR", LSR_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_EOR("EOR", EOR_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_RTS("RTS", RTS_StackImplied, StackImplied));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndexedIndirectWithX, DirectPageIndexedIndirectWithX));
    add(opCodes, new OpCode_PER("PER", PER_StackProgramCounterRelativeLong, StackProgramCounterRelativeLong));
    add(opCodes, new OpCode_ADC("ADC", ADC_StackRelative, StackRelative));
    add(opCodes, new OpCode_STZ("STZ", STZ_DirectPage, DirectPage));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPage, DirectPage));
    add(opCodes, new OpCode_ROR("ROR", ROR_DirectPage, DirectPage));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndirectLong, DirectPageIndirectLong));
    add(opCodes, new OpCode_PLA("PLA", PLA_StackImplied, StackImplied));
    add(opCodes, new OpCode_ADC("ADC", ADC_Immediate, Immediate));
    add(opCodes, new OpCode_ROR("ROR", ROR_Accumulator, Accumulator));
    add(opCodes, new OpCode_RTL("RTL", RTL_StackImplied, StackImplied));
    add(opCodes, new OpCode_JMP("JMP", JMP_AbsoluteIndirect, AbsoluteIndirect));
    add(opCodes, new OpCode_ADC("ADC", ADC_Absolute, Absolute));
    add(opCodes, new OpCode_ROR("ROR", ROR_Absolute, Absolute));
    add(opCodes, new OpCode_ADC("ADC", ADC_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BVS("BVS", BVS_ProgramCounterRelative, ProgramCounterRelative));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndirectIndexedWithY, DirectPageIndirectIndexedWithY));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndirect, DirectPageIndirect));
    add(opCodes, new OpCode_ADC("ADC", ADC_StackRelativeIndirectIndexedWithY, StackRelativeIndirectIndexedWithY));
    add(opCodes, new OpCode_STZ("STZ", STZ_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_ROR("ROR", ROR_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndirectLongIndexedWithY, DirectPageIndirectLongIndexedWithY));
    add(opCodes, new OpCode_SEI("SEI", SEI_Implied, Implied));
    add(opCodes, new OpCode_ADC("ADC", ADC_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_PLY("PLY", PLY_StackImplied, StackImplied));
    add(opCodes, new OpCode_TDC("TDC", TDC_Implied, Implied));
    add(opCodes, new OpCode_JMP("JMP", JMP_AbsoluteIndexedIndirectWithX, AbsoluteIndexedIndirectWithX));
    add(opCodes, new OpCode_ADC("ADC", ADC_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_ROR("ROR", ROR_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_ADC("ADC", ADC_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_BRA("BRA", BRA_ProgramCounterRelative, ProgramCounterRelative));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndexedIndirectWithX, DirectPageIndexedIndirectWithX));
    add(opCodes, new OpCode_BRL("BRL", BRL_ProgramCounterRelativeLong, ProgramCounterRelativeLong));
    add(opCodes, new OpCode_STA("STA", STA_StackRelative, StackRelative));
    add(opCodes, new OpCode_STY("STY", STY_DirectPage, DirectPage));
    add(opCodes, new OpCode_STA("STA", STA_DirectPage, DirectPage));
    add(opCodes, new OpCode_STX("STX", STX_DirectPage, DirectPage));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndirectLong, DirectPageIndirectLong));
    add(opCodes, new OpCode_DEY("DEY", DEY_Implied, Implied));
    add(opCodes, new OpCode_BIT("BIT", BIT_Immediate, Immediate));
    add(opCodes, new OpCode_TXA("TXA", TXA_Implied, Implied));
    add(opCodes, new OpCode_PHB("PHB", PHB_StackImplied, StackImplied));
    add(opCodes, new OpCode_STY("STY", STY_Absolute, Absolute));
    add(opCodes, new OpCode_STA("STA", STA_Absolute, Absolute));
    add(opCodes, new OpCode_STX("STX", STX_Absolute, Absolute));
    add(opCodes, new OpCode_STA("STA", STA_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BCC("BCC", BCC_ProgramCounterRelative, ProgramCounterRelative));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndirectIndexedWithY, DirectPageIndirectIndexedWithY));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndirect, DirectPageIndirect));
    add(opCodes, new OpCode_STA("STA", STA_StackRelativeIndirectIndexedWithY, StackRelativeIndirectIndexedWithY));
    add(opCodes, new OpCode_STY("STY", STY_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_STX("STX", STX_DirectPageIndexedWithY, DirectPageIndexedWithY));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndirectLongIndexedWithY, DirectPageIndirectLongIndexedWithY));
    add(opCodes, new OpCode_TYA("TYA", TYA_Implied, Implied));
    add(opCodes, new OpCode_STA("STA", STA_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_TXS("TXS", TXS_Implied, Implied));
    add(opCodes, new OpCode_TXY("TXY", TXY_Implied, Implied));
    add(opCodes, new OpCode_STZ("STZ", STZ_Absolute, Absolute));
    add(opCodes, new OpCode_STA("STA", STA_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_STZ("STZ", STZ_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_STA("STA", STA_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_LDY("LDY", LDY_Immediate, Immediate));
    add(opCodes, new OpCode_LDA("LDA", LDA_DirectPageIndexedIndirectWithX, DirectPageIndexedIndirectWithX));
    add(opCodes, new OpCode_LDX("LDX", LDX_Immediate, Immediate));
    add(opCodes, new OpCode_LDA("LDA", LDA_StackRelative, StackRelative));
    add(opCodes, new OpCode_LDY("LDY", LDY_DirectPage, DirectPage));
    add(opCodes, new OpCode_LDA("LDA", LDA_DirectPage, DirectPage));
    add(opCodes, new OpCode_LDX("LDX", LDX_DirectPage, DirectPage));
    add(opCodes, new OpCode_LDA("LDA", LDA_DirectPageIndirectLong, DirectPageIndirectLong));
    add(opCodes, new OpCode_TAY("TAY", TAY_Implied, Implied));
    add(opCodes, new OpCode_LDA("LDA", LDA_Immediate, Immediate));
    add(opCodes, new OpCode_TAX("TAX", TAX_Implied, Implied));
    add(opCodes, new OpCode_PLB("PLB", PLB_StackImplied, StackImplied));
    add(opCodes, new OpCode_LDY("LDY", LDY_Absolute, Absolute));
    add(opCodes, new OpCode_LDA("LDA", LDA_Absolute, Absolute));
    add(opCodes, new OpCode_LDX("LDX", LDX_Absolute, Absolute));
    add(opCodes, new OpCode_LDA("LDA", LDA_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BCS("BCS", BCS_ProgramCounterRelative, ProgramCounterRelative));
    add(opCodes, new OpCode_LDA("LDA", LDA_DirectPageIndirectIndexedWithY, DirectPageIndirectIndexedWithY));
    add(opCodes, new OpCode_LDA("LDA", LDA_DirectPageIndirect, DirectPageIndirect));
    add(opCodes, new OpCode_LDA("LDA", LDA_StackRelativeIndirectIndexedWithY, StackRelativeIndirectIndexedWithY));
    add(opCodes, new OpCode_LDY("LDY", LDY_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_LDA("LDA", LDA_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_LDX("LDX", LDX_DirectPageIndexedWithY, DirectPageIndexedWithY));
    add(opCodes, new OpCode_LDA("LDA", LDA_DirectPageIndirectLongIndexedWithY, DirectPageIndirectLongIndexedWithY));
    add(opCodes, new OpCode_CLV("CLV", CLV_Implied, Implied));
    add(opCodes, new OpCode_LDA("LDA", LDA_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_TSX("TSX", TSX_Implied, Implied));
    add(opCodes, new OpCode_TYX("TYX", TYX_Implied, Implied));
    add(opCodes, new OpCode_LDY("LDY", LDY_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_LDA("LDA", LDA_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_LDX("LDX", LDX_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_LDA("LDA", LDA_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_CPY("CPY", CPY_Immediate, Immediate));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndexedIndirectWithX, DirectPageIndexedIndirectWithX));
    add(opCodes, new OpCode_REP("REP", REP_Immediate, Immediate));
    add(opCodes, new OpCode_CMP("CMP", CMP_StackRelative, StackRelative));
    add(opCodes, new OpCode_CPY("CPY", CPY_DirectPage, DirectPage));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPage, DirectPage));
    add(opCodes, new OpCode_DEC("DEC", DEC_DirectPage, DirectPage));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndirectLong, DirectPageIndirectLong));
    add(opCodes, new OpCode_INY("INY", INY_Implied, Implied));
    add(opCodes, new OpCode_CMP("CMP", CMP_Immediate, Immediate));
    add(opCodes, new OpCode_DEX("DEX", DEX_Implied, Implied));
    add(opCodes, new OpCode_WAI("WAI", WAI_Implied, Implied));
    add(opCodes, new OpCode_CPY("CPY", CPY_Absolute, Absolute));
    add(opCodes, new OpCode_CMP("CMP", CMP_Absolute, Absolute));
    add(opCodes, new OpCode_DEC("DEC", DEC_Absolute, Absolute));
    add(opCodes, new OpCode_CMP("CMP", CMP_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BNE("BNE", BNE_ProgramCounterRelative, ProgramCounterRelative));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndirectIndexedWithY, DirectPageIndirectIndexedWithY));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndirect, DirectPageIndirect));
    add(opCodes, new OpCode_CMP("CMP", CMP_StackRelativeIndirectIndexedWithY, StackRelativeIndirectIndexedWithY));
    add(opCodes, new OpCode_PEI("PEI", PEI_StackDirectPageIndirect, StackDirectPageIndirect));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_DEC("DEC", DEC_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndirectLongIndexedWithY, DirectPageIndirectLongIndexedWithY));
    add(opCodes, new OpCode_CLD("CLD", CLD_Implied, Implied));
    add(opCodes, new OpCode_CMP("CMP", CMP_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_PHX("PHX", PHX_StackImplied, StackImplied));
    add(opCodes, new OpCode_STP("STP", STP_Implied, Implied));
    add(opCodes, new OpCode_JMP("JMP", JMP_AbsoluteIndirectLong, AbsoluteIndirectLong));
    add(opCodes, new OpCode_CMP("CMP", CMP_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_DEC("DEC", DEC_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_CMP("CMP", CMP_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_CPX("CPX", CPX_Immediate, Immediate));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndexedIndirectWithX, DirectPageIndexedIndirectWithX));
    add(opCodes, new OpCode_SEP("SEP", SEP_Immediate, Immediate));
    add(opCodes, new OpCode_SBC("SBC", SBC_StackRelative, StackRelative));
    add(opCodes, new OpCode_CPX("CPX", CPX_DirectPage, DirectPage));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPage, DirectPage));
    add(opCodes, new OpCode_INC("INC", INC_DirectPage, DirectPage));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndirectLong, DirectPageIndirectLong));
    add(opCodes, new OpCode_INX("INX", INX_Implied, Implied));
    add(opCodes, new OpCode_SBC("SBC", SBC_Immediate, Immediate));
    add(opCodes, new OpCode_NOP("NOP", NOP_Implied, Implied));
    add(opCodes, new OpCode_XBA("XBA", XBA_Implied, Implied));
    add(opCodes, new OpCode_CPX("CPX", CPX_Absolute, Absolute));
    add(opCodes, new OpCode_SBC("SBC", SBC_Absolute, Absolute));
    add(opCodes, new OpCode_INC("INC", INC_Absolute, Absolute));
    add(opCodes, new OpCode_SBC("SBC", SBC_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BEQ("BEQ", BEQ_ProgramCounterRelative, ProgramCounterRelative));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndirectIndexedWithY, DirectPageIndirectIndexedWithY));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndirect, DirectPageIndirect));
    add(opCodes, new OpCode_SBC("SBC", SBC_StackRelativeIndirectIndexedWithY, StackRelativeIndirectIndexedWithY));
    add(opCodes, new OpCode_PEA("PEA", PEA_StackAbsolute, StackAbsolute));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_INC("INC", INC_DirectPageIndexedWithX, DirectPageIndexedWithX));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndirectLongIndexedWithY, DirectPageIndirectLongIndexedWithY));
    add(opCodes, new OpCode_SED("SED", SED_Implied, Implied));
    add(opCodes, new OpCode_SBC("SBC", SBC_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_PLX("PLX", PLX_StackImplied, StackImplied));
    add(opCodes, new OpCode_XCE("XCE", XCE_Implied, Implied));
    add(opCodes, new OpCode_JSR("JSR", JSR_AbsoluteIndexedIndirectWithX, AbsoluteIndexedIndirectWithX));
    add(opCodes, new OpCode_SBC("SBC", SBC_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_INC("INC", INC_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_SBC("SBC", SBC_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));

    return opCodes.toArray(new OpCode[0]);
  }

  public static void add(List<OpCode> opCodes, OpCode opCode)
  {
    opCodes.add(opCode);
  }
}

