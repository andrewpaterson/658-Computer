  Wed Jan  5 2022 14:05                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        STARTUP SECTION
     2                        
     3                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     4                        
     5                        
     6                        FUNCTION_CALL MACRO SUBROUTINE, LOCAL_SIZE
     7                        	JSR SUBROUTINE
     8                        	PHA				;push accumulato
                    r
     9                        	PHX				;push x index
    10                        	PHY				;push y index
    11                        	PHD				;push direct pag
                    e
    12                        	PHP				;push processor 
                    status bits
    13                        	REP 	#$20	;16 bit memory
    14                        	LONGA	ON
    15                        	TSC				;transfer stack 
                    pointer to accumulator
    16                        	SEC				;carry = 1
    17                        	SBC 	LOCAL_SIZE	;accumulator = accumulat
                    or - LOCAL_SIZE - 1 + carry 
    18                        	TCS				;transfer accumu
                    lator to stack pointer
    19                        	DEC				;accumulator--
    20                        	TCD				;transfer accumu
                    lator to direct page
    21                        	ENDM
    22                        
    23                        FUNCTION_RETURN MACRO LOCAL_SIZE
    24                        	REP 	#$20	;16 bit memory
    25                        	LONGA	ON
    26                        	TSC
    27                        	CLC				;carry = 0
    28                        	ADC 	LOCAL_SIZE	;accumulator = accumulat
                    or + LOCAL_SIZE + carry 
    29                        	TCS
    30                        	PLP				;pull processor 
                    status bits
    31                        	PLD				;pull direct pag
                    e
    32                        	PLY
    33                        	PLX
    34                        	PLA
    35                        	RTS				;return from sub
                    routine
    36                        	ENDM
    37                        	
    38                        	ORG $8000
    39                        START:
    40 00:8000: E2 20        	SEP		#$20	;8 bit memory
    41                        	LONGA	OFF
  Wed Jan  5 2022 14:05                                                Page 2


    42                        	
    43 00:8002: A9 E4        	LDA		#$e4
    44 00:8004: 8D 00 F0     	STA		$F000
    45                        
    46 00:8007: A9 FF        	LDA		#$FF	;user program 0 (0xFF - 
                    user program ID)
    47 00:8009: 8D 00 FB     	STA		$FB00
    48                        	
    49 00:800C: A9 02        	LDA		#$02
    50 00:800E: 8F 00 FF 01  	STA		$01FF00	;remap user progream 0xF
                    F, bank 0x00 to real bank 0x02
    51                        	
    52 00:8012: 08           	PHP				;push processor 
                    status
    53 00:8013: A9 80        	LDA		#$80
    54 00:8015: 48           	PHA				;push progream c
                    ounter low-byte
    55 00:8016: A9 20        	LDA		#$20
    56 00:8018: 48           	PHA				;push progream c
                    ounter high-byte
    57 00:8019: A9 00        	LDA		#$00
    58 00:801B: 48           	PHA				;push progream c
                    ounter bank
    59                        
    60 00:801C: C2 20        	REP		#$20	;16 bit memory
    61                        	
    62 00:801E: 40           	RTI
    63                        
    64                        
    65                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
    66                        	
    67                        	ORG $E12B
    68                        RESET:
    69 00:E12B: 18           	CLC	     		;clear carry
    70 00:E12C: FB           	XCE	     		;clear emulation
    71 00:E12D: C2 30        	REP		#$30    ;16 bit registers
    72                        	LONGI 	ON
    73                        	LONGA	ON
    74 00:E12F: A9 FF 01     	LDA		#$01FF  ;get the stack address
    75 00:E132: 1B           	TCS	     		;and set the stack to it
    76                        
    77 00:E133: E2 20        	SEP		#$20	;8 bit memory
    78                        	LONGA 	OFF
    79 00:E135: A9 00        	LDA 	#$00	;get bank of data
    80 00:E137: 48           	PHA
    81 00:E138: AB           	PLB	     		;set data bank register
    82 00:E139: C2 20        	REP		#$20    ;back to 16 bit mode
    83                        	LONGA	ON
    84                        
    85 00:E13B: 5C 00 80 00  	JML  	START	;long jump in case not bank 0
    86                        
    87                        IRQ:
    88 00:E13F: 8B           	PHB				;save DB
    89 00:E140: 0B           	PHD				;save DP
    90 00:E141: C2 30        	REP		#$30	;16 bit registers
    91                        	LONGI 	ON
    92                        	LONGA	ON
    93 00:E143: 48           	PHA				;save A
  Wed Jan  5 2022 14:05                                                Page 3


    94 00:E144: DA           	PHX				;save X
    95 00:E145: 5A           	PHY 			;save Y
    96                        	
    97 00:E146: 80 2D        	BRA 	EXIT_INTERRUPT 
    98                        
    99                        NMI:
   100 00:E148: 8B           	PHB				;save DB
   101 00:E149: 0B           	PHD				;save DP
   102 00:E14A: C2 30        	REP		#$30	;16 bit registers
   103                        	LONGI 	ON
   104                        	LONGA	ON
   105 00:E14C: 48           	PHA				;save A
   106 00:E14D: DA           	PHX				;save X
   107 00:E14E: 5A           	PHY 			;save Y
   108                        
   109 00:E14F: 80 24        	BRA 	EXIT_INTERRUPT 
   110                        
   111                        ABORT:
   112 00:E151: 8B           	PHB				;save DB
   113 00:E152: 0B           	PHD				;save DP
   114 00:E153: C2 30        	REP		#$30	;16 bit registers
   115                        	LONGI 	ON
   116                        	LONGA	ON
   117 00:E155: 48           	PHA				;save A
   118 00:E156: DA           	PHX				;save X
   119 00:E157: 5A           	PHY 			;save Y
   120                        
   121 00:E158: 80 1B        	BRA 	EXIT_INTERRUPT 
   122                        
   123                        COP:
   124 00:E15A: 8B           	PHB				;save DB
   125 00:E15B: 0B           	PHD				;save DP
   126 00:E15C: C2 30        	REP		#$30	;16 bit registers
   127                        	LONGI 	ON
   128                        	LONGA	ON
   129 00:E15E: 48           	PHA				;save A
   130 00:E15F: DA           	PHX				;save X
   131 00:E160: 5A           	PHY 			;save Y
   132                        
   133 00:E161: 80 12        	BRA 	EXIT_INTERRUPT 
   134                        
   135                        BRK:
   136 00:E163: 8B           	PHB				;save DB
   137 00:E164: 0B           	PHD				;save DP
   138 00:E165: C2 30        	REP		#$30	;16 bit registers
   139                        	LONGI 	ON
   140                        	LONGA	ON
   141 00:E167: 48           	PHA				;save A
   142 00:E168: DA           	PHX				;save X
   143 00:E169: 5A           	PHY 			;save Y
   144                        
   145 00:E16A: 80 09        	BRA 	EXIT_INTERRUPT 
   146                        
   147                        EMU:
   148 00:E16C: 8B           	PHB				;save DB
   149 00:E16D: 0B           	PHD				;save DP
   150 00:E16E: C2 30        	REP		#$30	;16 bit registers
   151                        	LONGI 	ON
  Wed Jan  5 2022 14:05                                                Page 4


   152                        	LONGA	ON
   153 00:E170: 48           	PHA				;save A
   154 00:E171: DA           	PHX				;save X
   155 00:E172: 5A           	PHY 			;save Y
   156                        
   157 00:E173: 80 00        	BRA 	EXIT_INTERRUPT 
   158                        
   159                        EXIT_INTERRUPT:
   160 00:E175: C2 30        	REP	#$30		;16 bit registers
   161                        	LONGI 	ON
   162                        	LONGA	ON
   163 00:E177: 7A           	PLY             ;restore Y
   164 00:E178: FA               PLX             ;restore X
   165 00:E179: 68               PLA             ;restore A
   166 00:E17A: 2B               PLD             ;restore DP
   167 00:E17B: AB               PLB             ;restore DB
   168 00:E17C: 40           	RTI
   169                        	
   170                        	
   171                        ; This section defines the interrupt and reset vec
                    tors.    
   172                        
   173                        	ORG	$FFE4
   174                        
   175 00:FFE4: 5A E1        N_COP   DW    COP
   176 00:FFE6: 63 E1        N_BRK   DW    BRK
   177 00:FFE8: 51 E1        N_ABORT DW    ABORT
   178 00:FFEA: 48 E1        N_NMI   DW    NMI
   179 00:FFEC: 00 00        N_RSRVD DW    0
   180 00:FFEE: 3F E1        N_IRQ   DW    IRQ
   181                        
   182                        	ORG	$FFF4
   183 00:FFF4: 6C E1        E_COP   DW    EMU
   184 00:FFF6: 00 00        E_RSRVD DW    0
   185 00:FFF8: 6C E1        E_ABORT DW    EMU
   186 00:FFFA: 6C E1        E_NMI   DW    EMU
   187 00:FFFC: 2B E1        E_RESET DW    RESET
   188 00:FFFE: 6C E1        E_IRQ   DW    EMU
   189                        
   190 01:0000:              	ENDS
   191                        	END


      Lines assembled: 191
      Errors: 0
