package name.bizna.emu65816;

import name.bizna.emu65816.addressingmode.*;
import name.bizna.emu65816.opcode.*;

import java.util.ArrayList;
import java.util.List;

import static name.bizna.emu65816.AddressingMode.*;
import static name.bizna.emu65816.OpCodeName.*;

public class OpCodeTable
{
  @SuppressWarnings("DuplicatedCode")
  public static OpCode[] createTable()
  {
    List<OpCode> opCodes = new ArrayList<>();
    add(opCodes, new OpCode_BRK(BRK_Interrupt));
    add(opCodes, new OpCode_ORA(ORA_DirectPageIndexedIndirectWithX, new DirectIndexedIndirectWithXCycles(true)));
    add(opCodes, new OpCode_COP(COP_Interrupt));
    add(opCodes, new OpCode_ORA(ORA_StackRelative, new StackRelativeCycles(true)));
    add(opCodes, new OpCode_TSB("TSB", TSB_DirectPage, Direct));
    add(opCodes, new OpCode_ORA(ORA_DirectPage, new DirectCycles(true)));
    add(opCodes, new OpCode_ASL_Memory(ASL_DirectPage, new DirectRMWCycles()));
    add(opCodes, new OpCode_ORA(ORA_DirectPageIndirectLong, new DirectIndirectLongCycles(true)));
    add(opCodes, new OpCode_PHP("PHP", PHP_StackImplied, StackImplied));
    add(opCodes, new OpCode_ORA(ORA_Immediate, new ImmediateCycles()));
    add(opCodes, new OpCode_ASL_Memory(ASL_Accumulator, new AccumulatorCycles()));
    add(opCodes, new OpCode_PHD("PHD", PHD_StackImplied, StackImplied));
    add(opCodes, new OpCode_TSB("TSB", TSB_Absolute, Absolute));
    add(opCodes, new OpCode_ORA(ORA_Absolute, Absolute));
    add(opCodes, new OpCode_ASL_Memory(ASL_Absolute, new AbsoluteRMWCycles()));
    add(opCodes, new OpCode_ORA(ORA_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BPL("BPL", BPL_ProgramCounterRelative, Relative));
    add(opCodes, new OpCode_ORA(ORA_DirectPageIndirectIndexedWithY, DirectIndirectIndexedWithY));
    add(opCodes, new OpCode_ORA(ORA_DirectPageIndirect, DirectIndirect));
    add(opCodes, new OpCode_ORA(ORA_StackRelativeIndirectIndexedWithY, new StackRelativeIndirectIndexedWithYCycles(true)));
    add(opCodes, new OpCode_TRB("TRB", TRB_DirectPage, Direct));
    add(opCodes, new OpCode_ORA(ORA_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_ASL_Memory(ASL_DirectPageIndexedWithX, new DirectIndexedWithXRMWCycles()));
    add(opCodes, new OpCode_ORA(ORA_DirectPageIndirectLongIndexedWithY, DirectIndirectLongIndexedWithY));
    add(opCodes, new OpCode_CLC("CLC", CLC_Implied, Implied));
    add(opCodes, new OpCode_ORA(ORA_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_INC_Memory(INC_Accumulator, Accumulator));
    add(opCodes, new OpCode_TCS("TCS", TCS_Implied, Implied));
    add(opCodes, new OpCode_TRB("TRB", TRB_Absolute, Absolute));
    add(opCodes, new OpCode_ORA(ORA_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_ASL_Memory(ASL_AbsoluteIndexedWithX, new AbsoluteIndexedWithXRMWCycles()));
    add(opCodes, new OpCode_ORA(ORA_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_JSR("JSR", JSR_Absolute, Absolute));
    add(opCodes, new OpCode_AND(AND_DirectPageIndexedIndirectWithX, new DirectIndexedIndirectWithXCycles(true)));
    add(opCodes, new OpCode_JSR("JSR", JSR_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_AND(AND_StackRelative, new StackRelativeCycles(true)));
    add(opCodes, new OpCode_BIT("BIT", BIT_DirectPage, Direct));
    add(opCodes, new OpCode_AND("AND", AND_DirectPage, Direct));
    add(opCodes, new OpCode_ROL("ROL", ROL_DirectPage, Direct));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndirectLong, DirectIndirectLong));
    add(opCodes, new OpCode_PLP("PLP", PLP_StackImplied, StackImplied));
    add(opCodes, new OpCode_AND("AND", AND_Immediate, Immediate));
    add(opCodes, new OpCode_ROL("ROL", ROL_Accumulator, Accumulator));
    add(opCodes, new OpCode_PLD(PLD_StackImplied, new StackPLDCycles()));
    add(opCodes, new OpCode_BIT("BIT", BIT_Absolute, Absolute));
    add(opCodes, new OpCode_AND("AND", AND_Absolute, Absolute));
    add(opCodes, new OpCode_ROL("ROL", ROL_Absolute, Absolute));
    add(opCodes, new OpCode_AND("AND", AND_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BMI("BMI", BMI_ProgramCounterRelative, Relative));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndirectIndexedWithY, DirectIndirectIndexedWithY));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndirect, DirectIndirect));
    add(opCodes, new OpCode_AND("AND", AND_StackRelativeIndirectIndexedWithY, new StackRelativeIndirectIndexedWithYCycles(true)));
    add(opCodes, new OpCode_BIT("BIT", BIT_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_ROL("ROL", ROL_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_AND("AND", AND_DirectPageIndirectLongIndexedWithY, DirectIndirectLongIndexedWithY));
    add(opCodes, new OpCode_SEC("SEC", SEC_Implied, Implied));
    add(opCodes, new OpCode_AND("AND", AND_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_DEC_Memory("DEC", DEC_Accumulator, Accumulator));
    add(opCodes, new OpCode_TSC("TSC", TSC_Implied, Implied));
    add(opCodes, new OpCode_BIT("BIT", BIT_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_AND("AND", AND_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_ROL("ROL", ROL_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_AND("AND", AND_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_RTI(RTI_StackImplied, StackImplied));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndexedIndirectWithX, DirectIndexedIndirectWithX));
    add(opCodes, new OpCode_WDM("WDM", WDM_Implied, Implied));
    add(opCodes, new OpCode_EOR("EOR", EOR_StackRelative, new StackRelativeCycles(true)));
    add(opCodes, new OpCode_MVP("MVP", MVP_BlockMove, BlockMove));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPage, Direct));
    add(opCodes, new OpCode_LSR("LSR", LSR_DirectPage, Direct));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndirectLong, DirectIndirectLong));
    add(opCodes, new OpCode_PHA(PHA_StackImplied, new StackPHACycles()));
    add(opCodes, new OpCode_EOR("EOR", EOR_Immediate, Immediate));
    add(opCodes, new OpCode_LSR("LSR", LSR_Accumulator, Accumulator));
    add(opCodes, new OpCode_PHK("PHK", PHK_StackImplied, StackImplied));
    add(opCodes, new OpCode_JMP("JMP", JMP_Absolute, Absolute));
    add(opCodes, new OpCode_EOR("EOR", EOR_Absolute, Absolute));
    add(opCodes, new OpCode_LSR("LSR", LSR_Absolute, Absolute));
    add(opCodes, new OpCode_EOR("EOR", EOR_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BVC("BVC", BVC_ProgramCounterRelative, Relative));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndirectIndexedWithY, DirectIndirectIndexedWithY));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndirect, DirectIndirect));
    add(opCodes, new OpCode_EOR("EOR", EOR_StackRelativeIndirectIndexedWithY, new StackRelativeIndirectIndexedWithYCycles(true)));
    add(opCodes, new OpCode_MVN("MVN", MVN_BlockMove, BlockMove));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_LSR("LSR", LSR_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_EOR("EOR", EOR_DirectPageIndirectLongIndexedWithY, DirectIndirectLongIndexedWithY));
    add(opCodes, new OpCode_CLI("CLI", CLI_Implied, Implied));
    add(opCodes, new OpCode_EOR("EOR", EOR_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_PHY(PHY_StackImplied, new StackPHXPHYCycles()));
    add(opCodes, new OpCode_TCD("TCD", TCD_Implied, Implied));
    add(opCodes, new OpCode_JMP("JMP", JMP_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_EOR("EOR", EOR_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_LSR("LSR", LSR_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_EOR("EOR", EOR_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_RTS("RTS", RTS_StackImplied, StackImplied));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndexedIndirectWithX, DirectIndexedIndirectWithX));
    add(opCodes, new OpCode_PER("PER", PER_StackProgramCounterRelativeLong, new StackPERCycles()));
    add(opCodes, new OpCode_ADC("ADC", ADC_StackRelative, new StackRelativeCycles(true)));
    add(opCodes, new OpCode_STZ("STZ", STZ_DirectPage, Direct));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPage, Direct));
    add(opCodes, new OpCode_ROR("ROR", ROR_DirectPage, Direct));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndirectLong, DirectIndirectLong));
    add(opCodes, new OpCode_PLA(PLA_StackImplied, new StackPLACycles()));
    add(opCodes, new OpCode_ADC("ADC", ADC_Immediate, Immediate));
    add(opCodes, new OpCode_ROR("ROR", ROR_Accumulator, Accumulator));
    add(opCodes, new OpCode_RTL("RTL", RTL_StackImplied, StackImplied));
    add(opCodes, new OpCode_JMP("JMP", JMP_AbsoluteIndirect, AbsoluteIndirect));
    add(opCodes, new OpCode_ADC("ADC", ADC_Absolute, Absolute));
    add(opCodes, new OpCode_ROR("ROR", ROR_Absolute, Absolute));
    add(opCodes, new OpCode_ADC("ADC", ADC_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BVS("BVS", BVS_ProgramCounterRelative, Relative));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndirectIndexedWithY, DirectIndirectIndexedWithY));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndirect, DirectIndirect));
    add(opCodes, new OpCode_ADC("ADC", ADC_StackRelativeIndirectIndexedWithY, new StackRelativeIndirectIndexedWithYCycles(true)));
    add(opCodes, new OpCode_STZ("STZ", STZ_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_ROR("ROR", ROR_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_ADC("ADC", ADC_DirectPageIndirectLongIndexedWithY, DirectIndirectLongIndexedWithY));
    add(opCodes, new OpCode_SEI("SEI", SEI_Implied, Implied));
    add(opCodes, new OpCode_ADC("ADC", ADC_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_PLY("PLY", PLY_StackImplied, StackImplied));
    add(opCodes, new OpCode_TDC("TDC", TDC_Implied, Implied));
    add(opCodes, new OpCode_JMP("JMP", JMP_AbsoluteIndexedIndirectWithX, AbsoluteIndexedIndirectWithX));
    add(opCodes, new OpCode_ADC("ADC", ADC_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_ROR("ROR", ROR_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_ADC("ADC", ADC_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_BRA("BRA", BRA_ProgramCounterRelative, Relative));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndexedIndirectWithX, DirectIndexedIndirectWithX));
    add(opCodes, new OpCode_BRL("BRL", BRL_ProgramCounterRelativeLong, RelativeLong));
    add(opCodes, new OpCode_STA("STA", STA_StackRelative, new StackRelativeCycles(false)));
    add(opCodes, new OpCode_STY("STY", STY_DirectPage, Direct));
    add(opCodes, new OpCode_STA("STA", STA_DirectPage, Direct));
    add(opCodes, new OpCode_STX("STX", STX_DirectPage, Direct));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndirectLong, DirectIndirectLong));
    add(opCodes, new OpCode_DEY("DEY", DEY_Implied, Implied));
    add(opCodes, new OpCode_BIT("BIT", BIT_Immediate, Immediate));
    add(opCodes, new OpCode_TXA("TXA", TXA_Implied, Implied));
    add(opCodes, new OpCode_PHB("PHB", PHB_StackImplied, StackImplied));
    add(opCodes, new OpCode_STY("STY", STY_Absolute, Absolute));
    add(opCodes, new OpCode_STA("STA", STA_Absolute, Absolute));
    add(opCodes, new OpCode_STX("STX", STX_Absolute, Absolute));
    add(opCodes, new OpCode_STA("STA", STA_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BCC("BCC", BCC_ProgramCounterRelative, Relative));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndirectIndexedWithY, DirectIndirectIndexedWithY));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndirect, DirectIndirect));
    add(opCodes, new OpCode_STA("STA", STA_StackRelativeIndirectIndexedWithY, new StackRelativeIndirectIndexedWithYCycles(false)));
    add(opCodes, new OpCode_STY("STY", STY_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_STX("STX", STX_DirectPageIndexedWithY, DirectIndexedWithY));
    add(opCodes, new OpCode_STA("STA", STA_DirectPageIndirectLongIndexedWithY, DirectIndirectLongIndexedWithY));
    add(opCodes, new OpCode_TYA("TYA", TYA_Implied, Implied));
    add(opCodes, new OpCode_STA("STA", STA_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_TXS("TXS", TXS_Implied, Implied));
    add(opCodes, new OpCode_TXY("TXY", TXY_Implied, Implied));
    add(opCodes, new OpCode_STZ("STZ", STZ_Absolute, Absolute));
    add(opCodes, new OpCode_STA("STA", STA_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_STZ("STZ", STZ_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_STA("STA", STA_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_LDY("LDY", LDY_Immediate, Immediate));
    add(opCodes, new OpCode_LDA(LDA_DirectPageIndexedIndirectWithX, new DirectIndexedIndirectWithXCycles(true)));
    add(opCodes, new OpCode_LDX("LDX", LDX_Immediate, Immediate));
    add(opCodes, new OpCode_LDA(LDA_StackRelative, new StackRelativeCycles(true)));
    add(opCodes, new OpCode_LDY("LDY", LDY_DirectPage, Direct));
    add(opCodes, new OpCode_LDA(LDA_DirectPage, new DirectCycles(true)));
    add(opCodes, new OpCode_LDX("LDX", LDX_DirectPage, Direct));
    add(opCodes, new OpCode_LDA(LDA_DirectPageIndirectLong, new DirectIndirectLongCycles(true)));
    add(opCodes, new OpCode_TAY("TAY", TAY_Implied, Implied));
    add(opCodes, new OpCode_LDA(LDA_Immediate, new ImmediateCycles()));
    add(opCodes, new OpCode_TAX("TAX", TAX_Implied, Implied));
    add(opCodes, new OpCode_PLB(PLB_StackImplied, new StackPLBCycles()));
    add(opCodes, new OpCode_LDY("LDY", LDY_Absolute, Absolute));
    add(opCodes, new OpCode_LDA(LDA_Absolute, new AbsoluteCycles(true)));
    add(opCodes, new OpCode_LDX("LDX", LDX_Absolute, Absolute));
    add(opCodes, new OpCode_LDA(LDA_AbsoluteLong, new AbsoluteLongCycles(true)));
    add(opCodes, new OpCode_BCS("BCS", BCS_ProgramCounterRelative, Relative));
    add(opCodes, new OpCode_LDA(LDA_DirectPageIndirectIndexedWithY, new DirectIndirectIndexedWithYCycles(true)));
    add(opCodes, new OpCode_LDA(LDA_DirectPageIndirect, new DirectIndirectCycles(true)));
    add(opCodes, new OpCode_LDA(LDA_StackRelativeIndirectIndexedWithY, new StackRelativeIndirectIndexedWithYCycles(true)));
    add(opCodes, new OpCode_LDY("LDY", LDY_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_LDA(LDA_DirectPageIndexedWithX, new DirectIndexedWithXCycles(true)));
    add(opCodes, new OpCode_LDX("LDX", LDX_DirectPageIndexedWithY, DirectIndexedWithY));
    add(opCodes, new OpCode_LDA(LDA_DirectPageIndirectLongIndexedWithY, new DirectIndirectLongIndexedWithYCycles(true)));
    add(opCodes, new OpCode_CLV("CLV", CLV_Implied, Implied));
    add(opCodes, new OpCode_LDA(LDA_AbsoluteIndexedWithY, new AbsoluteIndexedWithYCycles(true)));
    add(opCodes, new OpCode_TSX("TSX", TSX_Implied, Implied));
    add(opCodes, new OpCode_TYX("TYX", TYX_Implied, Implied));
    add(opCodes, new OpCode_LDY("LDY", LDY_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_LDA(LDA_AbsoluteIndexedWithX, new AbsoluteIndexedWithXCycles(true)));
    add(opCodes, new OpCode_LDX("LDX", LDX_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_LDA(LDA_AbsoluteLongIndexedWithX, new AbsoluteLongIndexedWithXCycles(true)));
    add(opCodes, new OpCode_CPY("CPY", CPY_Immediate, Immediate));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndexedIndirectWithX, DirectIndexedIndirectWithX));
    add(opCodes, new OpCode_REP("REP", REP_Immediate, Immediate));
    add(opCodes, new OpCode_CMP("CMP", CMP_StackRelative, new StackRelativeCycles(true)));
    add(opCodes, new OpCode_CPY("CPY", CPY_DirectPage, Direct));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPage, Direct));
    add(opCodes, new OpCode_DEC_Memory("DEC", DEC_DirectPage, Direct));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndirectLong, DirectIndirectLong));
    add(opCodes, new OpCode_INY("INY", INY_Implied, Implied));
    add(opCodes, new OpCode_CMP("CMP", CMP_Immediate, Immediate));
    add(opCodes, new OpCode_DEX("DEX", DEX_Implied, Implied));
    add(opCodes, new OpCode_WAI("WAI", WAI_Implied, Implied));
    add(opCodes, new OpCode_CPY("CPY", CPY_Absolute, Absolute));
    add(opCodes, new OpCode_CMP("CMP", CMP_Absolute, Absolute));
    add(opCodes, new OpCode_DEC_Memory("DEC", DEC_Absolute, Absolute));
    add(opCodes, new OpCode_CMP("CMP", CMP_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BNE("BNE", BNE_ProgramCounterRelative, Relative));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndirectIndexedWithY, DirectIndirectIndexedWithY));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndirect, DirectIndirect));
    add(opCodes, new OpCode_CMP("CMP", CMP_StackRelativeIndirectIndexedWithY, new StackRelativeIndirectIndexedWithYCycles(true)));
    add(opCodes, new OpCode_PEI("PEI", PEI_StackDirectPageIndirect, new StackPEICycles()));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_DEC_Memory("DEC", DEC_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_CMP("CMP", CMP_DirectPageIndirectLongIndexedWithY, DirectIndirectLongIndexedWithY));
    add(opCodes, new OpCode_CLD("CLD", CLD_Implied, Implied));
    add(opCodes, new OpCode_CMP("CMP", CMP_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_PHX(PHX_StackImplied, new StackPHXPHYCycles()));
    add(opCodes, new OpCode_STP("STP", STP_Implied, Implied));
    add(opCodes, new OpCode_JMP("JMP", JMP_AbsoluteIndirectLong, AbsoluteIndirectLong));
    add(opCodes, new OpCode_CMP("CMP", CMP_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_DEC_Memory("DEC", DEC_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_CMP("CMP", CMP_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));
    add(opCodes, new OpCode_CPX("CPX", CPX_Immediate, Immediate));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndexedIndirectWithX, DirectIndexedIndirectWithX));
    add(opCodes, new OpCode_SEP("SEP", SEP_Immediate, Immediate));
    add(opCodes, new OpCode_SBC("SBC", SBC_StackRelative, new StackRelativeCycles(true)));
    add(opCodes, new OpCode_CPX("CPX", CPX_DirectPage, Direct));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPage, Direct));
    add(opCodes, new OpCode_INC_Memory(INC_DirectPage, Direct));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndirectLong, DirectIndirectLong));
    add(opCodes, new OpCode_INX("INX", INX_Implied, Implied));
    add(opCodes, new OpCode_SBC("SBC", SBC_Immediate, Immediate));
    add(opCodes, new OpCode_NOP("NOP", NOP_Implied, Implied));
    add(opCodes, new OpCode_XBA("XBA", XBA_Implied, Implied));
    add(opCodes, new OpCode_CPX("CPX", CPX_Absolute, Absolute));
    add(opCodes, new OpCode_SBC("SBC", SBC_Absolute, Absolute));
    add(opCodes, new OpCode_INC_Memory(INC_Absolute, Absolute));
    add(opCodes, new OpCode_SBC("SBC", SBC_AbsoluteLong, AbsoluteLong));
    add(opCodes, new OpCode_BEQ("BEQ", BEQ_ProgramCounterRelative, Relative));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndirectIndexedWithY, DirectIndirectIndexedWithY));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndirect, DirectIndirect));
    add(opCodes, new OpCode_SBC("SBC", SBC_StackRelativeIndirectIndexedWithY, new StackRelativeIndirectIndexedWithYCycles(true)));
    add(opCodes, new OpCode_PEA("PEA", PEA_StackAbsolute, StackAbsolute));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_INC_Memory(INC_DirectPageIndexedWithX, DirectIndexedWithX));
    add(opCodes, new OpCode_SBC("SBC", SBC_DirectPageIndirectLongIndexedWithY, DirectIndirectLongIndexedWithY));
    add(opCodes, new OpCode_SED("SED", SED_Implied, Implied));
    add(opCodes, new OpCode_SBC("SBC", SBC_AbsoluteIndexedWithY, AbsoluteIndexedWithY));
    add(opCodes, new OpCode_PLX("PLX", PLX_StackImplied, StackImplied));
    add(opCodes, new OpCode_XCE("XCE", XCE_Implied, Implied));
    add(opCodes, new OpCode_JSR("JSR", JSR_AbsoluteIndexedIndirectWithX, AbsoluteIndexedIndirectWithX));
    add(opCodes, new OpCode_SBC("SBC", SBC_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_INC_Memory(INC_AbsoluteIndexedWithX, AbsoluteIndexedWithX));
    add(opCodes, new OpCode_SBC("SBC", SBC_AbsoluteLongIndexedWithX, AbsoluteLongIndexedWithX));

    for (int i = 0; i <= 255; i++)
    {
      OpCode opCode = opCodes.get(i);
      if (opCode.getCode() != i)
      {
        throw new EmulatorException("OpCode [" + opCode.getName() + "] has code [" + opCode.getCode() + "] but is at index [" + i + "].");
      }
    }

    return opCodes.toArray(new OpCode[0]);
  }

  public static void add(List<OpCode> opCodes, OpCode opCode)
  {
    opCodes.add(opCode);
  }
}

